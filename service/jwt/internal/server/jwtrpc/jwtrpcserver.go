// Code generated by goctl. DO NOT EDIT.
// Source: jwt.proto

package server

import (
	"context"

	"douyin/service/jwt/Jwt"
	"douyin/service/jwt/internal/logic/jwtrpc"
	"douyin/service/jwt/internal/svc"
)

type JwtRpcServer struct {
	svcCtx *svc.ServiceContext
	Jwt.UnimplementedJwtRpcServer
}

func NewJwtRpcServer(svcCtx *svc.ServiceContext) *JwtRpcServer {
	return &JwtRpcServer{
		svcCtx: svcCtx,
	}
}

func (s *JwtRpcServer) CreateToken(ctx context.Context, in *Jwt.CreateTokenReq) (*Jwt.CreateTokenResp, error) {
	l := jwtrpclogic.NewCreateTokenLogic(ctx, s.svcCtx)
	return l.CreateToken(in)
}

func (s *JwtRpcServer) ParseToken(ctx context.Context, in *Jwt.ParseTokenReq) (*Jwt.ParseTokenResp, error) {
	l := jwtrpclogic.NewParseTokenLogic(ctx, s.svcCtx)
	return l.ParseToken(in)
}

func (s *JwtRpcServer) IsValidToken(ctx context.Context, in *Jwt.IsValidTokenReq) (*Jwt.IsValidTokenResp, error) {
	l := jwtrpclogic.NewIsValidTokenLogic(ctx, s.svcCtx)
	return l.IsValidToken(in)
}
